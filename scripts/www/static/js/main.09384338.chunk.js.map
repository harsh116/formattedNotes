{"version":3,"sources":["Notes.js","Editor.js","Search.js","App.js","index.js"],"names":["Note","props","note","setIsEditorActive","setEditingNote","deleteNote","onClick","obj","id","fmtext","className","e","stopPropagation","ReactHtmlParser","Notes","notes","noteArray","map","length","a","split","b","i","j","Math","random","toFixed","join","generate_token","Editor","ref","useRef","useState","isSaveEnabled","setIsSaveEnabled","isEditorActive","editingNote","setNotes","class","str","updatedNotes","pos","findIndex","ele","rawtext","push","html","innerRef","onChange","target","value","Search","setIsSearching","setSearchedNotes","searchValue","setSearchValue","useEffect","includes","sNotes","filter","toLowerCase","searchednotes","words","len","word","substr","type","placeholder","App","searchedNotes","isSearching","idgenerate","setIdgenerate","splice","notestring","localStorage","getItem","noteobj","JSON","parse","currId","Number","setItem","arrString","stringify","console","log","fmText","toString","renderReactDom","ReactDOM","render","document","getElementById","window","cordova","addEventListener"],"mappings":"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","file":"static/js/main.09384338.chunk.js","sourcesContent":["import \"./Notes.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nfunction generate_token(length) {\r\n  //edit the token allowed characters\r\n  const a =\r\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".split(\"\");\r\n  const b = [];\r\n  for (let i = 0; i < length; i++) {\r\n    let j = (Math.random() * (a.length - 1)).toFixed(0);\r\n    b[i] = a[j];\r\n  }\r\n  return b.join(\"\");\r\n}\r\n\r\nconst Note = (props) => {\r\n  const { note, setIsEditorActive, setEditingNote, deleteNote } = props;\r\n\r\n  const openCurrentNote = () => {\r\n    setIsEditorActive(true);\r\n    const obj = {\r\n      id: note.id,\r\n      fmtext: note.fmtext,\r\n    };\r\n    setEditingNote(obj);\r\n  };\r\n\r\n  return (\r\n    <div onClick={openCurrentNote} className=\"Note\">\r\n      <button\r\n        className=\"deleteCross\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          deleteNote(note.id);\r\n        }}\r\n      >\r\n        {\"\\u00D7\"}\r\n      </button>\r\n      {ReactHtmlParser(note.fmtext)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = (props) => {\r\n  const { notes, setIsEditorActive, setEditingNote, deleteNote } = props;\r\n\r\n  const noteArray = notes.map((note) => {\r\n    return (\r\n      <Note\r\n        setIsEditorActive={setIsEditorActive}\r\n        key={generate_token(5)}\r\n        note={note}\r\n        setEditingNote={setEditingNote}\r\n        deleteNote={deleteNote}\r\n      />\r\n    );\r\n  });\r\n\r\n  const emptyNoteMessage = () => {\r\n    return <div className=\"emptyMessage\">No notes here</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Notes\">\r\n      {noteArray && noteArray.length > 0 ? noteArray : emptyNoteMessage()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import { useState, useRef } from \"react\";\r\nimport \"./Editor.scss\";\r\nimport ContentEditable from \"react-contenteditable\";\r\n\r\nconst Editor = (props) => {\r\n  const ref = useRef();\r\n  const [isSaveEnabled, setIsSaveEnabled] = useState(false);\r\n\r\n  const {\r\n    setIsEditorActive,\r\n    isEditorActive,\r\n    editingNote,\r\n    setEditingNote,\r\n    setNotes,\r\n    notes,\r\n    deleteNote,\r\n  } = props;\r\n\r\n  const handleChange = (e) => {\r\n    setEditingNote({ ...editingNote, fmtext: e.target.value });\r\n    setIsSaveEnabled(true);\r\n  };\r\n\r\n  const save = () => {\r\n    const patt = /<\\/*[a-z]+>/g;\r\n    const str = editingNote.fmtext.split(patt).join(\" \");\r\n\r\n    const updatedNotes = [...notes];\r\n\r\n    let pos = updatedNotes.findIndex((ele) => ele.id === editingNote.id);\r\n    const obj = {\r\n      id: editingNote.id,\r\n      fmtext: editingNote.fmtext,\r\n      rawtext: str,\r\n    };\r\n    if (pos === -1) {\r\n      updatedNotes.push(obj);\r\n    } else {\r\n      updatedNotes[pos] = obj;\r\n    }\r\n\r\n    setNotes(updatedNotes);\r\n  };\r\n\r\n  const close = () => {\r\n    setIsEditorActive(false);\r\n    setEditingNote({});\r\n    setIsSaveEnabled(false);\r\n  };\r\n\r\n  const deleteFn = () => {\r\n    setIsEditorActive(false);\r\n    setIsSaveEnabled(false);\r\n    deleteNote(editingNote.id);\r\n  };\r\n\r\n  return (\r\n    <div className={`EditorContainer ${isEditorActive ? \"active\" : \"\"}`}>\r\n      <div className={`Editor ${isEditorActive ? \"active\" : \"\"}`}>\r\n        <header className=\"options\">\r\n          <button onClick={close} className=\"close\">\r\n            {\"\\u00D7\"}\r\n          </button>\r\n          <div className=\"rightButtons\">\r\n            <button onClick={deleteFn} className=\"deleteBtn\">\r\n              <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <button\r\n              onClick={isSaveEnabled ? save : null}\r\n              className={`save ${isSaveEnabled ? \"active\" : \"\"}`}\r\n            >\r\n              {\"\\u2713\"}\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <div className=\"article\">\r\n          <ContentEditable\r\n            className=\"edit\"\r\n            html={editingNote.fmtext ? editingNote.fmtext : \"\"}\r\n            innerRef={ref}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./Search.scss\";\r\n\r\nconst Search = (props) => {\r\n  const { setIsSearching, notes, setSearchedNotes } = props;\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (notes.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (searchValue.length === 0) {\r\n      setIsSearching(false);\r\n      setSearchedNotes([]);\r\n      return;\r\n    }\r\n\r\n    if (searchValue.includes(\" \")) {\r\n      let sNotes = notes.filter((note) =>\r\n        note?.rawtext.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setIsSearching(true);\r\n      setSearchedNotes(sNotes);\r\n      return;\r\n    }\r\n\r\n    let searchednotes = [];\r\n    for (let note of notes) {\r\n      let text = note.rawtext;\r\n      let words = text.split(\" \");\r\n\r\n      const len = searchValue.length;\r\n      const pos = words.findIndex(\r\n        (word) =>\r\n          word.substr(0, len).toLowerCase() === searchValue.toLowerCase()\r\n      );\r\n      if (pos === -1) {\r\n        continue;\r\n      }\r\n\r\n      searchednotes.push(note);\r\n    }\r\n\r\n    setIsSearching(true);\r\n    setSearchedNotes(searchednotes);\r\n  }, [searchValue]); // eslint-disable-line \r\n\r\n  const handleChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        className=\"searchInput\"\r\n        type=\"text\"\r\n        placeholder=\"Search notes\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.scss\";\n\nimport Notes from \"./Notes\";\nimport Editor from \"./Editor\";\nimport Search from \"./Search\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [searchedNotes, setSearchedNotes] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  const [isEditorActive, setIsEditorActive] = useState(false);\n  const [editingNote, setEditingNote] = useState({});\n  const [idgenerate, setIdgenerate] = useState(0);\n  const deleteNote = (id) => {\n    const updatedNotes = [...notes];\n    const pos = updatedNotes.findIndex((ele) => ele.id === id);\n    updatedNotes.splice(pos, 1);\n    setNotes(updatedNotes);\n  };\n\n  useEffect(() => {\n    const notestring = localStorage.getItem(\"notes\");\n    if (notestring && notestring.length > 0) {\n      const noteobj = JSON.parse(notestring);\n      setNotes(noteobj);\n    }\n    let currId = localStorage.getItem(\"noteID\");\n    if (currId) {\n      setIdgenerate(Number(currId));\n    } else {\n      localStorage.setItem(\"noteID\", \"0\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const arrString = JSON.stringify(notes);\n    localStorage.setItem(\"notes\", arrString);\n    console.log(\"notes: \", notes);\n  }, [notes]);\n\n  const openNewNote = () => {\n    setIsEditorActive(true);\n    const obj = {\n      id: idgenerate,\n      fmText: \"\",\n    };\n\n    setEditingNote(obj);\n    setIdgenerate(idgenerate + 1);\n    localStorage.setItem(\"noteID\", (idgenerate + 1).toString());\n  };\n\n  return (\n    <div className=\"App\">\n      <Search\n        setIsSearching={setIsSearching}\n        notes={notes}\n        setSearchedNotes={setSearchedNotes}\n      />\n      <Notes\n        setIsEditorActive={setIsEditorActive}\n        notes={isSearching ? searchedNotes : notes}\n        setEditingNote={setEditingNote}\n        deleteNote={deleteNote}\n      />\n      <button onClick={openNewNote} className=\"addNew\">\n        {\"\\u002B\"}\n      </button>\n      <Editor\n        editingNote={editingNote}\n        setEditingNote={setEditingNote}\n        isEditorActive={isEditorActive}\n        setIsEditorActive={setIsEditorActive}\n        notes={notes}\n        setNotes={setNotes}\n        deleteNote={deleteNote}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();"],"sourceRoot":""}